(function(root,factory){"function"==typeof define&&define.amd?define(["exports","angular"],factory):"object"==typeof exports?factory(exports,require("angular")):factory(root.ngDropdownMulti={},root.angular)})(this,function(exports,angular){"use strict";function contains(collection,target){var containsTarget=!1;return collection.some(function(object){return object===target&&(containsTarget=!0,!0)}),containsTarget}function getIndexByProperty(collection,objectToFind,property){var index=-1;return collection.some(function(option,ind){return option[property]===objectToFind[property]&&(index=ind,!0)}),index}var dropdownMulti=angular.module("ngDropdownMulti",[]);dropdownMulti.controller("DropdownMultiselectCtrl",function($scope,$element,$filter,$document){function focusFirstOption(){setTimeout(function(){var elementToFocus=angular.element($element)[0].querySelector(".option");angular.isDefined(elementToFocus)&&null!=elementToFocus&&elementToFocus.focus()},0)}function textWidth(text){var $btn=$element.find("button"),canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");return ctx.font=$btn.css("font-size")+$btn.css("font-family"),ctx.originalFont=$btn.css("font-size")+$btn.css("font-family"),ctx.fillStyle="#000000",ctx.measureText(text).width}var $dropdownTrigger=$element.children()[0],externalEvents={onItemSelect:angular.noop,onItemDeselect:angular.noop,onSelectAll:angular.noop,onDeselectAll:angular.noop,onInitDone:angular.noop,onMaxSelectionReached:angular.noop,onSelectionChanged:angular.noop,onClose:angular.noop},settings={dynamicTitle:!0,scrollable:!1,scrollableHeight:"300px",closeOnBlur:!0,displayProp:"label",enableSearch:!1,clearSearchOnClose:!1,selectionLimit:0,showCheckAll:!0,showUncheckAll:!0,showEnableSearchButton:!1,closeOnSelect:!1,buttonClasses:"btn btn-default",closeOnDeselect:!1,groupBy:void 0,checkBoxes:!1,groupByTextProvider:null,smartButtonMaxItems:0,smartButtonTextConverter:angular.noop,styleActive:!1,selectedToTop:!1,keyboardControls:!1,template:"{{getPropertyForObject(option, settings.displayProp)}}",searchField:"$",showAllSelectedText:!1},texts={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"checked",selectionOf:"/",searchPlaceholder:"Search...",buttonDefaultText:"Select",dynamicButtonTextSuffix:"checked",disableSearch:"Disable search",enableSearch:"Enable search",selectGroup:"Select all:",allSelectedText:"All"},input={searchFilter:$scope.searchFilter||""};angular.extend(settings,$scope.extraSettings||[]),angular.extend(externalEvents,$scope.events||[]),angular.extend(texts,$scope.translationTexts),settings.closeOnBlur&&$document.on("click",function(e){if($scope.open){for(var target=e.target.parentElement,parentFound=!1;angular.isDefined(target)&&null!==target&&!parentFound;)!target.className.split||!contains(target.className.split(" "),"multiselect-parent")||parentFound||target!==$dropdownTrigger||(parentFound=!0),target=target.parentElement;parentFound||$scope.$apply(function(){$scope.close()})}}),angular.extend($scope,{toggleDropdown:function(){$scope.open?$scope.close():$scope.open=!0,$scope.settings.keyboardControls&&$scope.open&&(1===$scope.settings.selectionLimit&&$scope.settings.enableSearch?setTimeout(function(){angular.element($element)[0].querySelector(".searchField").focus()},0):focusFirstOption()),$scope.settings.enableSearch&&$scope.open&&setTimeout(function(){angular.element($element)[0].querySelector(".searchField").focus()},0)},checkboxClick:function($event,option){$scope.setSelectedItem(option,!1,!0),$event.stopImmediatePropagation()},externalEvents:externalEvents,settings:settings,texts:texts,input:input,close:function(){$scope.open=!1,$scope.input.searchFilter=$scope.settings.clearSearchOnClose?"":$scope.input.searchFilter,$scope.externalEvents.onClose()},selectCurrentGroup:function(currentGroup){$scope.selectedModel.splice(0,$scope.selectedModel.length),$scope.options.forEach(function(item){item[$scope.settings.groupBy]===currentGroup&&$scope.setSelectedItem(item,!1,!1)}),$scope.externalEvents.onSelectionChanged()},getGroupLabel:function(groupValue){return null===$scope.settings.groupByTextProvider?groupValue:$scope.settings.groupByTextProvider(groupValue)},getButtonText:function(){if($scope.settings.dynamicTitle&&$scope.selectedModel&&0<$scope.selectedModel.length){if(angular.isFunction($scope.settings.smartButtonTextProvider))return $scope.settings.smartButtonTextProvider($scope.selectedModel);if(0<$scope.settings.smartButtonMaxItems){var widthLimit=$element[0].offsetWidth-24-2-8,itemsText=[];angular.forEach($scope.options,function(optionItem){if($scope.isChecked(optionItem)){var displayText=$scope.getPropertyForObject(optionItem,$scope.settings.displayProp),converterResponse=$scope.settings.smartButtonTextConverter(displayText,optionItem);itemsText.push(converterResponse||displayText)}}),$scope.selectedModel.length>$scope.settings.smartButtonMaxItems&&(itemsText=itemsText.slice(0,$scope.settings.smartButtonMaxItems),itemsText.push("..."));var result=itemsText.join(", "),index=result.length-4;if(0===$element[0].offsetWidth)return result;if(widthLimit<=textWidth("..."))return"...";for(;textWidth(result)>widthLimit;)"..."!==itemsText[itemsText.length-1]&&(itemsText.push("..."),result+="...",index=result.length-4),result=result.slice(0,index)+result.slice(index+1),index-=1;return result}var totalSelected=angular.isDefined($scope.selectedModel)?$scope.selectedModel.length:0;return 0===totalSelected?$scope.texts.buttonDefaultText:$scope.settings.showAllSelectedText&&totalSelected===$scope.options.length?$scope.texts.allSelectedText:totalSelected+" "+$scope.texts.dynamicButtonTextSuffix}return $scope.texts.buttonDefaultText},getPropertyForObject:function(object,property){return angular.isDefined(object)&&Object.prototype.hasOwnProperty.call(object,property)?object[property]:void 0},selectAll:function(){$scope.deselectAll(!0),$scope.externalEvents.onSelectAll();var searchResult=$filter("filter")($scope.options,$scope.getFilter($scope.input.searchFilter));angular.forEach(searchResult,function(value){$scope.setSelectedItem(value,!0,!1)}),$scope.externalEvents.onSelectionChanged(),$scope.selectedGroup=null},deselectAll:function(){var dontSendEvent=!!(0<arguments.length&&arguments[0]!==void 0)&&arguments[0];dontSendEvent||$scope.externalEvents.onDeselectAll(),$scope.selectedModel.splice(0,$scope.selectedModel.length),dontSendEvent||$scope.externalEvents.onSelectionChanged(),$scope.selectedGroup=null},setSelectedItem:function(option){var dontRemove=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1],fireSelectionChange=arguments[2],exists=void 0,indexOfOption=void 0;angular.isDefined(settings.idProperty)?(exists=-1!==getIndexByProperty($scope.selectedModel,option,settings.idProperty),indexOfOption=getIndexByProperty($scope.selectedModel,option,settings.idProperty)):(exists=-1!==$scope.selectedModel.indexOf(option),indexOfOption=$scope.selectedModel.indexOf(option)),!dontRemove&&exists?($scope.selectedModel.splice(indexOfOption,1),$scope.externalEvents.onItemDeselect(option),$scope.settings.closeOnDeselect&&$scope.close()):!exists&&(0===$scope.settings.selectionLimit||$scope.selectedModel.length<$scope.settings.selectionLimit)?($scope.selectedModel.push(option),fireSelectionChange&&$scope.externalEvents.onItemSelect(option),$scope.settings.closeOnSelect&&$scope.close(),0<$scope.settings.selectionLimit&&$scope.selectedModel.length===$scope.settings.selectionLimit&&$scope.externalEvents.onMaxSelectionReached()):1===$scope.settings.selectionLimit&&!exists&&$scope.selectedModel.length===$scope.settings.selectionLimit&&($scope.selectedModel.splice(0,1),$scope.selectedModel.push(option),fireSelectionChange&&$scope.externalEvents.onItemSelect(option),$scope.settings.closeOnSelect&&$scope.close()),fireSelectionChange&&$scope.externalEvents.onSelectionChanged(),$scope.selectedGroup=null},isChecked:function(option){return angular.isDefined(settings.idProperty)?-1!==getIndexByProperty($scope.selectedModel,option,settings.idProperty):-1!==$scope.selectedModel.indexOf(option)},keyDownLink:function(event){var sourceScope=angular.element(event.target).scope(),nextOption=void 0,parent=event.target.parentNode;if($scope.settings.keyboardControls)if(13===event.keyCode||32===event.keyCode)event.preventDefault(),sourceScope.option?$scope.setSelectedItem(sourceScope.option,!1,!0):"deselectAll"===event.target.id?$scope.deselectAll():"selectAll"===event.target.id&&$scope.selectAll();else if(38===event.keyCode){for(event.preventDefault(),parent.previousElementSibling&&(nextOption=parent.previousElementSibling.querySelector("a")||parent.previousElementSibling.querySelector("input"));!nextOption&&!!parent;)parent=parent.previousElementSibling,parent&&(nextOption=parent.querySelector("a")||parent.querySelector("input"));nextOption&&nextOption.focus()}else if(40===event.keyCode){for(event.preventDefault(),parent.nextElementSibling&&(nextOption=parent.nextElementSibling.querySelector("a")||parent.nextElementSibling.querySelector("input"));!nextOption&&!!parent;)parent=parent.nextElementSibling,parent&&(nextOption=parent.querySelector("a")||parent.querySelector("input"));nextOption&&nextOption.focus()}else 27===event.keyCode&&(event.preventDefault(),$scope.toggleDropdown())},keyDownSearchDefault:function(event){var parent=event.target.parentNode.parentNode,nextOption=void 0;if($scope.settings.keyboardControls)if(9===event.keyCode||40===event.keyCode)event.preventDefault(),focusFirstOption();else if(38===event.keyCode){for(event.preventDefault(),parent.previousElementSibling&&(nextOption=parent.previousElementSibling.querySelector("a")||parent.previousElementSibling.querySelector("input"));!nextOption&&!!parent;)parent=parent.previousElementSibling,parent&&(nextOption=parent.querySelector("a")||parent.querySelector("input"));nextOption&&nextOption.focus()}else 27===event.keyCode&&(event.preventDefault(),$scope.toggleDropdown())},keyDownSearch:function(event,searchFilter){var searchResult;$scope.settings.keyboardControls&&(13!==event.keyCode||(1===$scope.settings.selectionLimit&&$scope.settings.enableSearch?(searchResult=$filter("filter")($scope.options,$scope.getFilter(searchFilter)),1===searchResult.length&&$scope.setSelectedItem(searchResult[0],!1,!0)):$scope.settings.enableSearch&&$scope.selectAll()))},getFilter:function(searchFilter){var filter={};return filter[$scope.settings.searchField]=searchFilter,filter},toggleSearch:function($event){$event&&$event.stopPropagation(),$scope.settings.enableSearch=!$scope.settings.enableSearch,$scope.settings.enableSearch||($scope.input.searchFilter="")},keyDownToggleSearch:function(){$scope.settings.keyboardControls&&(13!==event.keyCode||($scope.toggleSearch(),$scope.settings.enableSearch?setTimeout(function(){angular.element($element)[0].querySelector(".searchField").focus()},0):focusFirstOption()))},orderFunction:function(object1,object2){if(angular.isUndefined(object2))return-1;if(angular.isUndefined(object1))return 1;if("object"!==object1.type||"object"!==object2.type)return object1.index<object2.index?-1:1;var v1=object1.value,v2=object2.value;return $scope.settings.groupBy&&v1[$scope.settings.groupBy]!==v2[$scope.settings.groupBy]?v1[$scope.settings.groupBy]<v2[$scope.settings.groupBy]?1:-1:$scope.settings.selectedToTop?!$scope.isChecked(v1)&&!$scope.isChecked(v2)||$scope.isChecked(v1)&&$scope.isChecked(v2)?$scope.options.indexOf(v1)<$scope.options.indexOf(v2)?-1:1:$scope.isChecked(v1)?-1:1:$scope.options.indexOf(v1)<$scope.options.indexOf(v2)?-1:1}}),$scope.externalEvents.onInitDone()}),"use strict";var dropdownMulti=angular.module("ngDropdownMulti");dropdownMulti.directive("dmDropdownStaticInclude",function($compile){return{link:function(scope){var template=attrs.dmDropdownStaticInclude,contents=element.html(template).contents();$compile(contents)(scope)}}}),"use strict";var dropdownMulti=angular.module("ngDropdownMulti");dropdownMulti.directive("dropdownMultiselect",function(){return{restrict:"AE",scope:{selectedModel:"=",options:"=",extraSettings:"=",events:"=",searchFilter:"=?",translationTexts:"=",disabled:"="},transclude:{toggleDropdown:"?toggleDropdown"},controller:"DropdownMultiselectCtrl as dropdownMultiselectCtrl",templateUrl:"templates/dropdownMultiselect.html"}}),"use strict",angular.module("ngDropdownMulti").run(["$templateCache",function($templateCache){$templateCache.put("templates/dropdownMultiselect.html","<div class=\"multiselect-parent btn-group dropdown-multiselect\" ng-class=\"{open: open}\">\n     <div ng-transclude=\"toggleDropdown\" ng-click=\"toggleDropdown()\">\n      <button ng-disabled=\"disabled\"\n              type=\"button\"\n              class=\"dropdown-toggle\"\n              ng-class=\"settings.buttonClasses\"\n              >\n        {{getButtonText()}}&nbsp;<span class=\"caret\"></span>\n      </button>\n    </div>\n  <ul class=\"dropdown-menu dropdown-menu-form\"\n      ng-if=\"open\"\n      ng-style=\"{display: open ? 'block' : 'none', height : settings.scrollable ? settings.scrollableHeight : 'auto', overflow: 'auto' }\">\n    <li ng-if=\"settings.showCheckAll && settings.selectionLimit === 0\">\n      <a ng-keydown=\"keyDownLink($event)\"\n         data-ng-click=\"selectAll()\"\n         tabindex=\"-1\"\n         id=\"selectAll\">\n        <span class=\"glyphicon glyphicon-ok\"></span>\n        {{texts.checkAll}}\n      </a>\n    <li ng-if=\"settings.showUncheckAll\">\n      <a ng-keydown=\"keyDownLink($event)\"\n         data-ng-click=\"deselectAll();\"\n         tabindex=\"-1\"\n         id=\"deselectAll\">\n        <span class=\"glyphicon glyphicon-remove\"></span>\n        {{texts.uncheckAll}}\n      </a>\n    </li>\n    <li ng-if=\"settings.selectByGroups && ((settings.showCheckAll && settings.selectionLimit > 0) || settings.showUncheckAll)\"\n        class=\"divider\">\n    </li>\n    <li ng-repeat=\"currentGroup in settings.selectByGroups track by $index\"\n        ng-click=\"selectCurrentGroup(currentGroup)\">\n      <a ng-class=\"{'dropdown-selected-group': selectedGroup === currentGroup}\"\n         tabindex=\"-1\">\n        {{::texts.selectGroup}} {{::getGroupLabel(currentGroup)}}\n      </a>\n    </li>\n    <li ng-if=\"settings.selectByGroups && settings.showEnableSearchButton\"\n        class=\"divider\">\n    </li>\n    <li ng-if=\"settings.showEnableSearchButton && settings.enableSearch\">\n      <a ng-keydown=\"keyDownLink($event); keyDownToggleSearch();\"\n         ng-click=\"toggleSearch($event);\"\n         tabindex=\"-1\">\n        {{texts.disableSearch}}\n      </a>\n    </li>\n    <li ng-if=\"settings.showEnableSearchButton && !settings.enableSearch\">\n      <a ng-keydown=\"keyDownLink($event); keyDownToggleSearch();\"\n         ng-click=\"toggleSearch($event);\"\n         tabindex=\"-1\">\n        {{texts.enableSearch}}\n      </a>\n    </li>\n    <li ng-if=\"(settings.showCheckAll && settings.selectionLimit > 0) || settings.showUncheckAll || settings.showEnableSearchButton\"\n        class=\"divider\">\n    </li>\n    <li ng-if=\"settings.enableSearch\">\n      <div class=\"dropdown-header\">\n        <input type=\"text\"\n               class=\"form-control searchField\"\n               ng-keydown=\"keyDownSearchDefault($event); keyDownSearch($event, input.searchFilter);\"\n               ng-style=\"{width: '100%'}\"\n               ng-model=\"input.searchFilter\"\n               placeholder=\"{{texts.searchPlaceholder}}\" />\n      </div>\n    </li>\n    <li ng-if=\"settings.enableSearch\"\n        class=\"divider\">\n    </li>\n    <li ng-if=\"settings.groupBy\"\n        ng-repeat-start=\"option in orderedItems = ( options | filter:getFilter(input.searchFilter) | orderBy:'':false:orderFunction)\"\n        ng-show=\"getPropertyForObject(option, settings.groupBy) !== getPropertyForObject(orderedItems[$index - 1], settings.groupBy)\"\n        role=\"presentation\"\n        class=\"dropdown-header\">\n      {{ getGroupLabel(getPropertyForObject(option, settings.groupBy)) }}\n    </li>\n    <li ng-if=\"settings.groupBy\"\n        ng-class=\"{'active': isChecked(option) && settings.styleActive}\"\n        ng-repeat-end\n        role=\"presentation\">\n      <a ng-keydown=\"option.disabled || keyDownLink($event)\"\n         role=\"menuitem\"\n         class=\"option\"\n         tabindex=\"-1\"\n         ng-click=\"option.disabled || setSelectedItem(option, false, true)\"\n         ng-disabled=\"option.disabled\">\n        <div ng-if=\"settings.checkBoxes\"\n             class=\"checkbox\">\n          <label>\n            <input class=\"checkboxInput\"\n                   type=\"checkbox\"\n                   ng-click=\"checkboxClick($event, option)\"\n                   ng-checked=\"isChecked(option)\" />\n            <span dm-dropdown-static-include=\"{{settings.template}}\"></span>\n          </label>\n        </div>\n        <span ng-if=\"!settings.checkBoxes\"\n              data-ng-class=\"{'glyphicon glyphicon-ok': isChecked(option)}\">\n        </span>\n        <span dm-dropdown-static-include=\"{{settings.template}}\"></span>\n      </a>\n    </li>\n    <li ng-if=\"!settings.groupBy\"\n        ng-class=\"{'active': isChecked(option) && settings.styleActive}\"\n        role=\"presentation\"\n        ng-repeat=\"option in options | filter:getFilter(input.searchFilter) | orderBy:'':false:orderFunction\">\n      <a ng-keydown=\"option.disabled || keyDownLink($event)\"\n         role=\"menuitem\"\n         class=\"option\"\n         tabindex=\"-1\"\n         ng-click=\"option.disabled || setSelectedItem(option, false, true)\"\n         ng-disabled=\"option.disabled\">\n        <div ng-if=\"settings.checkBoxes\"\n             class=\"checkbox\">\n          <label>\n            <input class=\"checkboxInput\"\n                   type=\"checkbox\"\n                   ng-click=\"checkboxClick($event, option)\"\n                   ng-checked=\"isChecked(option)\" />\n            <span dm-dropdown-static-include=\"{{settings.template}}\"></span>\n          </label>\n        </div>\n        <span ng-if=\"!settings.checkBoxes\"\n              data-ng-class=\"{'glyphicon glyphicon-ok': isChecked(option)}\">\n        </span>\n        <span ng-if=\"!settings.checkBoxes\"\n              dm-dropdown-static-include=\"{{settings.template}}\"></span>\n      </a>\n    </li>\n    <li class=\"divider\"\n        ng-show=\"settings.selectionLimit > 1\">\n    </li>\n    <li role=\"presentation\"\n        ng-show=\"settings.selectionLimit > 1\">\n      <a role=\"menuitem\">{{selectedModel.length}} {{texts.selectionOf}} {{settings.selectionLimit}} {{texts.selectionCount}}</a>\n    </li>\n  </ul>\n</div>\n")}]),exports.ngDropdownMulti="ngDropdownMulti"});